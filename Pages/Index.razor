@page "/"
<PageTitle>Blog</PageTitle>
@using System.Collections.Generic
@using BlazorApp1.Common
@using BlazorApp1.Data.Models
@using BlazorApp1.Services
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Rendering
@inject NewsService newsService
<h1> <a href="/blog">BLOG</a></h1>

<section class="column">
    <div class="main">
        <Carousel />
    </div>
    <ul class="columns is-vcentered">
        <li class="column is-narrow">
            <h1 class="title is-5 ">
                TIN NỔI BẬT
            </h1>
        </li>
        <li class="column">
            <hr class="m-0">
        </li>
    </ul>
    <div class="buma-container buma-mt-4">
        <div class="buma-row buma-gutter-24">

            <div class="buma-col-12 buma-col-md-6 buma-mb-4">
                <EventCard Title="@displayedNewList1?.Title"
                Subtitle="@displayedNewList1?.Subtitle"
                Date="@displayedNewList1?.Date.ToString("dd/MM/yyyy")"
                TagType="@displayedNewList1?.TagType"
                TagText="@displayedNewList1?.TagText"
                BackgroundClass="@displayedNewList1?.BackgroundClass"
                Height="580px" />

            </div>
            @if (displayedNewList is null)
            {
                <div class="buma-col-12">
                    <p>Đang tải...</p>
                </div>
            }
            else
            {
                <div class="buma-col-12 buma-col-md-6">
                    <div class="buma-row buma-gutter-24">
                        @foreach (var news in newsList.Skip(1).Take(2))
                        {
                            <div class="buma-col-12 buma-mb-4">
                                <EventCard Title="@news.Title"
                                Subtitle="@news.Subtitle"
                                Date="@news.Date.ToString("dd/MM/yyyy")"
                                TagType="@news.TagType"
                                TagText="@news.TagText"
                                BackgroundClass="@news.BackgroundClass"
                                Height="180px" />
                            </div>
                        }
                    </div>

                    <div class="buma-row buma-gutter-24">
                        @foreach (var news in newsList.Skip(3).Take(2))
                        {
                            <div class="buma-col-6 buma-mb-4">
                                <EventCard Title="@news.Title"
                                Subtitle="@news.Subtitle"
                                Date="@news.Date.ToString("dd/MM/yyyy")"
                                TagType="@news.TagType"
                                TagText="@news.TagText"
                                BackgroundClass="@news.BackgroundClass"
                                Height="180px" />
                            </div>
                        }
                    </div>
                </div>
            }

        </div>

    </div>

    <div class="tabs is-right is-boxed">
        <ul>
            <li class="@((string.IsNullOrEmpty(selectedTag) ? "is-active" : ""))">
                <a @onclick="() => FilterByTag(null)">Tất cả</a>
            </li>
            @if (newsListFilter != null)
            {
                @foreach (var tag in newsListFilter)
                {
                    <li class="@((selectedTag == tag ? "is-active" : ""))">
                        <a @onclick="() => FilterByTag(tag)">@tag</a>
                    </li>
                }
            }
        </ul>
    </div>

    <div class="buma-container">
        <div class="buma-row buma-gutter-24">
            <CascadingValue Value="displayedNewList">
                @if (displayedNewList != null)
                {
                    @foreach (var news in displayedNewList)
                    {
                        <div class="buma-col-12 buma-col-md-6 buma-col-lg-3 buma-mb-4">
                            <NewsCard NewsList="@news" />
                        </div>
                    }
                }
            </CascadingValue>
        </div>
    </div>

    <div class="is-justify-content-center">
        <button class="button is-primary" @onclick="ToggleNewsDisplay">
            @(showAll ? "Ẩn bớt" : "Xem thêm")
        </button>
    </div>

</section>
@code {
    private List<News>? newsList;
    private List<News>? displayedNewList;
    private News? displayedNewList1;
    private List<News>? displayedNewList2;
    private List<News>? displayedNewList3;
    private List<string>? newsListFilter;
    private int itemsToShow = 4;
    private bool showAll = false;
    private string? selectedTag = null;
    private bool shouldUpdateUI = true;

    protected override bool ShouldRender()
    {
        return shouldUpdateUI; 
    }
    protected override async Task OnInitializedAsync()
    {
        newsList = await newsService.GetAllNewsAsync();
        LoadMore();
        LoadMoreFilter();
    }

    private void LoadMore()
    {
        if (newsList == null) return;

        if (showAll)
        {
            displayedNewList = string.IsNullOrEmpty(selectedTag)
                ? newsList
                : newsList.Where(news => news.TagText == selectedTag).ToList();
        }
        else
        {
            displayedNewList = string.IsNullOrEmpty(selectedTag)
                ? newsList.Take(itemsToShow).ToList()
                : newsList.Where(news => news.TagText == selectedTag).Take(itemsToShow).ToList();
            displayedNewList1 = newsList.FirstOrDefault();
            displayedNewList2 = newsList.Skip(1).Take(2).ToList();
            displayedNewList3 = newsList.Skip(3).Take(2).ToList();
        }
    }

    private void LoadMoreFilter()
    {
        if (newsList == null) return;
        newsListFilter = newsList.Select(s => s.TagText).Distinct().ToList();
    }

    private void FilterByTag(string? tag)
    {
        selectedTag = tag;
        showAll = false;
        itemsToShow = 4;
        LoadMore();
        shouldUpdateUI = true;
        // StateHasChanged();
    }

    private void ToggleNewsDisplay()
    {
        if (displayedNewList == null) return;

        if (showAll)
        {
            showAll = false;
            itemsToShow = 4;
        }
        else
        {
            if (itemsToShow + 4 >= (string.IsNullOrEmpty(selectedTag)
                ? newsList?.Count
                : newsList?.Count(news => news.TagText == selectedTag)))
            {
                showAll = true;
            }
            else
            {
                itemsToShow += 4;
            }
        }

        LoadMore();
    }
}
